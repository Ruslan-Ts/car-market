{"version":3,"file":"static/js/213.8120b588.chunk.js","mappings":"qPAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wDAKtBC,EAASH,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,seAyBtBG,EAAQL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0IASlBK,EAAQP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mJ,mBCFjC,EAlCe,WACb,IAAMO,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAASJ,EAAAA,EAAAA,IAAYK,EAAAA,IAM3B,OACEC,EAAAA,EAAAA,KAACjB,EAAS,CAAAkB,UACRC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EACED,EAAAA,EAAAA,KAACX,EAAK,CAACc,IAAI,MAAKF,SAAC,eACjBC,EAAAA,EAAAA,MAACnB,EAAS,CAAAkB,SAAA,EACRD,EAAAA,EAAAA,KAACT,EAAK,CACJa,YAAY,iBACZC,KAAK,OACLC,KAAK,OACLC,GAAG,MACHC,MAAOV,EACPW,SAfO,SAAAC,GACfd,GAASe,EAAAA,EAAAA,IAAgBD,EAAEE,OAAOJ,OACpC,KAeQR,EAAAA,EAAAA,KAAA,YAAUO,GAAG,OAAMN,SAChBR,EAAKoB,KAAI,SAAAC,GAAG,OACXd,EAAAA,EAAAA,KAAA,UAAAC,SAAsBa,EAAIC,MAAbD,EAAIP,GAAuB,OAG5CP,EAAAA,EAAAA,KAACb,EAAM,CAAC6B,KAAK,SAAQf,SAAC,kBAKhC,E,oBCcA,EApCa,WACX,IAAML,GAAWC,EAAAA,EAAAA,MACXJ,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBsB,GAAYvB,EAAAA,EAAAA,IAAYwB,EAAAA,IACxBC,GAAQzB,EAAAA,EAAAA,IAAY0B,EAAAA,IACpBC,GAAY3B,EAAAA,EAAAA,IAAY4B,EAAAA,IAU9B,OARAC,EAAAA,EAAAA,YAAU,WACR3B,GAAS4B,EAAAA,EAAAA,GAAUH,GACrB,GAAG,CAACzB,EAAUyB,KAEdE,EAAAA,EAAAA,YAAU,WACR3B,GAAS6B,EAAAA,EAAAA,MACX,GAAG,CAAC7B,KAGFM,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,YAAWzB,SAAA,CACvBgB,IAAcE,IAASnB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,IAC9BR,IAASnB,EAAAA,EAAAA,KAAA,KAAAC,SAAIkB,EAAMS,WACpB5B,EAAAA,EAAAA,KAAC6B,EAAM,KACP7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAAA7B,SACFR,EAAKoB,KAAI,SAAAC,GAAG,OACXd,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAC+B,EAAAA,EAAO,CAACjB,IAAKA,KADPA,EAAIP,GAER,OAGTP,EAAAA,EAAAA,KAACgC,EAAAA,GAAU,CAAA/B,SACRR,EAAKwC,OAASZ,IAAc,IAC3BrB,EAAAA,EAAAA,KAACb,EAAAA,GAAM,CAAC+C,QAAS,kBAAMtC,GAASuC,EAAAA,EAAAA,MAAW,EAAClC,SAAC,kBAKvD,C","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Cars/Cars.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 14px;\n  border-radius: 12px;\n  background-color: #3470ff;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  width: 136px;\n\n  cursor: pointer;\n  font-size: 14px;\n  line-height: 20px;\n  font-style: normal;\n  font-weight: 600;\n\n  margin-left: 18px;\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n    box-shadow: 0 4px 8px hsla(190deg, 15%, 5%, 0.2);\n  }\n`;\n\nexport const Label = styled.div`\n  font-size: 14px;\n  line-height: 18px;\n  font-style: normal;\n  font-weight: 500;\n  color: #8a8a89;\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled.input`\n  width: 224px;\n  border-radius: 12px;\n  font-size: 12px;\n  background: #f7f7fb;\n  width: 100%;\n  border: 0;\n  padding: 8px 14px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectCars, selectStatusFilter } from 'redux/selectors';\nimport { Button, Container, Input, Label } from './Filter.styled';\nimport { setStatusFilter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const cars = useSelector(selectCars);\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onFilter = e => {\n    dispatch(setStatusFilter(e.target.value));\n  };\n\n  return (\n    <Container>\n      <form>\n        <Label for=\"fav\">Car brand</Label>\n        <Container>\n          <Input\n            placeholder=\"Enter the text\"\n            list=\"cars\"\n            name=\"cars\"\n            id=\"fav\"\n            value={filter}\n            onChange={onFilter}\n          />\n          <datalist id=\"cars\">\n            {cars.map(car => (\n              <option key={car.id}>{car.make}</option>\n            ))}\n          </datalist>\n          <Button type=\"submit\">Search</Button>\n        </Container>\n      </form>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCars } from 'redux/operations';\nimport {\n  selectCars,\n  selectError,\n  selectIsLoading,\n  selectPageLimit,\n} from 'redux/selectors';\nimport Loader from '../../components/Loader';\nimport CarItem from 'components/CarsItem/CarItem';\nimport Filter from 'components/Filter/Filter';\nimport { BtnWrapper, Button, List } from './Cars.styled';\nimport { nextPage, resetPage } from 'redux/carsSlice';\n\nconst Cars = () => {\n  const dispatch = useDispatch();\n  const cars = useSelector(selectCars);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const pageLimit = useSelector(selectPageLimit);\n\n  useEffect(() => {\n    dispatch(fetchCars(pageLimit));\n  }, [dispatch, pageLimit]);\n\n  useEffect(() => {\n    dispatch(resetPage());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      {isLoading && !error && <Loader />}\n      {error && <p>{error.message}</p>}\n      <Filter />\n      <List>\n        {cars.map(car => (\n          <li key={car.id}>\n            <CarItem car={car} />\n          </li>\n        ))}\n      </List>\n      <BtnWrapper>\n        {cars.length % pageLimit === 0 && (\n          <Button onClick={() => dispatch(nextPage())}>Load more</Button>\n        )}\n      </BtnWrapper>\n    </div>\n  );\n};\n\nexport default Cars;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","Label","_templateObject3","Input","_templateObject4","cars","useSelector","selectCars","dispatch","useDispatch","filter","selectStatusFilter","_jsx","children","_jsxs","for","placeholder","list","name","id","value","onChange","e","setStatusFilter","target","map","car","make","type","isLoading","selectIsLoading","error","selectError","pageLimit","selectPageLimit","useEffect","fetchCars","resetPage","className","Loader","message","Filter","List","CarItem","BtnWrapper","length","onClick","nextPage"],"sourceRoot":""}